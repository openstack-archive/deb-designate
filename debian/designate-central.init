#!/bin/sh
### BEGIN INIT INFO
# Provides:          designate-central
# Required-Start:    $network $local_fs $remote_fs $syslog
# Required-Stop:     $remote_fs
# Should-Start:      postgresql mysql keystone rabbitmq-server ntp
# Should-Stop:       postgresql mysql keystone rabbitmq-server ntp
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Designate API
# Description:       Frontend Designate API server
### END INIT INFO

# Author: Thomas Goirand <zigo@debian.org>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Designate DNSaaS central"
SERVICE_NAME=designate
NAME=${SERVICE_NAME}-central
DAEMON=/usr/bin/${NAME}
DAEMON_ARGS="--config-file=/etc/${SERVICE_NAME}/${SERVICE_NAME}.conf --log-dir=/var/log/${SERVICE_NAME} --logfile=${NAME}.log"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
SYSTEM_USER=${SERVICE_NAME}

# Exit if the package is not installed
[ -x $DAEMON ] || exit 0

. /lib/lsb/init-functions

if [ ! -e /var/log/${SERVICE_NAME} ] ; then
	mkdir -p /var/log/${SERVICE_NAME}
	chown ${SYSTEM_USER} /var/log/${SERVICE_NAME}
fi

do_start () {
	start-stop-daemon --start --background --quiet --chuid ${SYSTEM_USER}:${SYSTEM_USER} --make-pidfile --pidfile $PIDFILE --startas $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --background --quiet --chuid ${SYSTEM_USER}:${SYSTEM_USER} --make-pidfile --pidfile $PIDFILE --startas $DAEMON -- \
		$DAEMON_ARGS \
		|| return 2
}

do_stop () {
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
start)
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
;;
stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
;;
status)   
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
;;
restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
	;;
	*)
		# Failed to stop
		log_end_msg 1
	;;
	esac   
;;
*)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
;;
esac
